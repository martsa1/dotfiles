# vim: se filetype=yaml.ansible
---

- hosts: all
  vars_files:
    - vars.yml

  tasks:
    #########################################
    # Ensure base dependencies are present. #
    #########################################

    - name: Install required apt packages for rofi compilation
      become: true
      apt:
        name:
          - "autoconf"
          - "automake"
          - "bison"
          - "build-essential"
          - "check"
          - "flex"
          - "meson"
          - "pkgconf"

          # - "gio-unix-2.0-dev"
          # - "gmodule-2.0-dev"
          - "libcairo2-dev"
          # - "libcairo2-xcb-dev"
          - "libglib2.0-dev"
          - "libpango1.0-dev"
          - "libpangocairo-1.0-0"
          - "librsvg2-dev"
          - "libstartup-notification0-dev"
          - "libxcb1-dev"
          - "libxkbcommon-dev"
          - "libxkbcommon-x11-dev"
          - "libxcb-util-dev"
          # - "libxcb-util-wm-dev"
          - "libxcb-xrm-dev"
          - "libxcb-xinerama0-dev"

        state: "present"
        cache_valid_time: 600

    - name: "Add 19.10 specific dependencies"
      become: true
      apt:
        name:
          - libxcb-ewmh-dev
          - libxcb-icccm4-dev
          - libxcb-randr0-dev
        state: present
        cache_valid_time: 600
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "19.10"


    ###############################################
    # Build newer version of check (c unit tests) #
    ###############################################
    - name: "Download check source code"
      when: ansible_distribution_major_version >= "18"
      get_url:
        # url: "https://github.com/libcheck/check/archive/0.13.0.tar.gz"
        url: "https://github.com/libcheck/check/releases/download/0.13.0/check-0.13.0.tar.gz"
        dest: /tmp/check.tar.gz

    - name: "unpack check"
      when: ansible_distribution_major_version >= "18"
      unarchive:
        src: /tmp/check.tar.gz
        dest: "/home/{{ user }}/code/personal"

    - name: "Add Check dependency specific dependencies"
      become: true
      apt:
        name:
          - autoconf
          - automake
          - libtool
          - pkg-config
          - sed
          - texinfo
        state: present
        cache_valid_time: 600
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "18"

    - name: "Remove apt based check library"
      become: true
      apt:
        name:
          - check
        state: absent
        cache_valid_time: 600
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "18"

    - name: "Build check"
      when: ansible_distribution_major_version >= "18"
      args:
        chdir: "/home/{{ user }}/code/personal/check-0.13.0"
      with_items:
        - "autoreconf --install"
        - "./configure"
        - "make"
      command: "{{ item }}"

    - name: "install check"
      when: ansible_distribution_major_version >= "18"
      args:
        chdir: "/home/{{ user }}/code/personal/check-0.13.0"
      become: true
      with_items:
        - "make install"
        - "ldconfig"
      command: "{{ item }}"

    ##############
    # Build Rofi #
    ##############
    - name: "Clone Rofi Repo"
      register: rofi_repo
      git:
        repo: https://github.com/davatorium/rofi.git
        dest: "{{ repo_base_dir }}"
        version: 1.5.4
        recursive: true

    - name: "Ensure rofi build dir"
      file:
        path: "{{ repo_base_dir }}/build"
        state: directory

    - name: "Run autoreconf"
      args:
        chdir: "{{ repo_base_dir}}"
      command: "autoreconf -i"

    - name: "Configure Rofi build"
      with_items:
        # - "meson setup build"
        # - "ninja -C build"
        # - "autoreconf -i"
        - "../configure"
        - "make"
      args:
        chdir: "{{ repo_base_dir }}/build"
      command: "{{ item }}"

    - name: "Install Rofi"
      become: true
      with_items:
        # - "ninja -C build install"
        - "make install"
      args:
        chdir: "{{ repo_base_dir }}/build"
      command: "{{ item }}"

    # #####################################
    # # Ensure configuration is in place. #
    # #####################################
    - name: Ensure rofi config folder exists
      file:
        path: "/home/{{ user }}/.config/rofi"
        state: directory

    - name: "Symlink Rofi config into place"
      with_items:
        - [["config", "config.rasi"]]
        - [["dracula.rasi", "dracula.rasi"]]
      file:
        src: "{{ dotfiles_base_dir }}/rofi/{{ item[0] }}"
        dest: "{{ config_base_dir }}/rofi/{{ item[1] }}"
        state: link



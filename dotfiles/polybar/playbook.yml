---

# Play to install and configure i3wm

- hosts: all
  vars_files:
    - vars.yml

  tasks:
    - name: "Ensure polybar build dependencies are in place"
      apt:
        name:
          - "build-essential"
          - "ccache"
          - "cmake"
          - "cmake-data"
          - "i3-wm"
          - "libasound2-dev"
          - "libcairo2-dev"
          - "libcurl4-openssl-dev"
          - "libiw-dev"
          - "libjsoncpp-dev"
          - "libmpdclient-dev"
          - "libpulse-dev"
          - "libxcb-cursor-dev"
          - "libxcb-ewmh-dev"
          - "libxcb-icccm4-dev"
          - "libxcb-image0-dev"
          - "libxcb-randr0-dev"
          - "libxcb-util0-dev"
          - "libxcb-xkb-dev"
          - "libxcb-xrm-dev"
          - "libxcb1-dev"
          - "pkg-config"
          - "python3"
          - "python3-xcbgen"
          - "xcb-proto"
        state: present
        cache_valid_time: 600
      become: "true"

    - name: "Pull in Polybar Repo"
      git:
        repo: "https://github.com/jaagr/polybar"
        dest: "{{personal_code_base_dir}}/polybar"
        accept_hostkey: yes
        clone: yes
        force: yes
        recursive: yes
        update: yes
        # version: 3.1.0
        version: 3.2.1

    - name: "Ensure build directory exists"
      file:
        path: "{{personal_code_base_dir}}/polybar/build"
        state: directory

    - name: "Put xpp submodule to master"
      command: "{{item}}"
      args:
        chdir: "{{personal_code_base_dir}}/polybar/lib/xpp"
      with_items:
        - "git checkout master"

    - name: "Ensure xpp/proto files are removed"
      file:
        path: "{{personal_code_base_dir}}/polybar/lib/xpp/include/xpp/proto/"
        state: absent
        # recurse: "true"

    - name: "Ensure xpp/proto build dir exists"
      file:
        path: "{{personal_code_base_dir}}/polybar/lib/xpp/include/xpp/proto/"
        state: directory

    - name: "Build polybar make config"
      command: "cmake .."
      args:
        chdir: "{{personal_code_base_dir}}/polybar/build"

    - name: "Build polybar"
      shell: "make -j$(nproc)"
      args:
        executable: "/bin/bash"
        chdir: "{{personal_code_base_dir}}/polybar"

    - name: "Install polybar"
      command: "make install"
      args:
        chdir: "{{personal_code_base_dir}}/polybar"
      become: "true"

    - name: Setup Polybar config directory
      file:
        path: "/home/{{user}}/.config/polybar"
        state: directory

    - name: Link polybar config
      file:
        src: "{{dotfiles_base_dir}}/polybar/config"
        dest: "/home/{{user}}/.config/polybar/config"
        state: link

---
# Install and manage the various base python packages.

- name: Import OS specific vars
  include_vars: "{{ansible_os_family|lower()|default(omit)}}.yml"

- name: "Install python base packages"
  package:
    name: "{{ depends }}"
    state: present
  become: true

- name: Ensure personal code directory exists
  file:
    path: "/home/{{user}}/code/personal"
    state: directory
    owner: "{{user}}"
  become: true
  become_user: "{{user}}"

- name: "Pull in pyenv installer script"
  get_url:
    url: "https://pyenv.run"
    dest: "/tmp/pyenv.run"
  become: true
  become_user: "{{user}}"

- name: "Install pyenv"
  command: "bash /tmp/pyenv.run"
  args:
    creates: "/home/{{user}}/code/personal/pyenv"
  environment: "{{env}}"
  tags:
    - skip_ansible_lint
  become: true
  become_user: "{{user}}"

- name: "Install python versions"
  shell: 'eval "$(pyenv init -)" && pyenv install {{item}}'
  args:
    executable: "/bin/bash"
    creates: "/home/{{user}}/code/personal/pyenv/versions/{{item}}"
  with_items: "{{python_versions}}"
  become: true
  become_user: "{{user}}"
  environment: "{{env}}"


- name: "Set global default python version to {{default_python_version}}"
  shell: 'eval "$(pyenv init -)" && pyenv global {{default_python_version}}'
  args:
    executable: "/bin/bash"
  tags:
    - skip_ansible_lint
  become: true
  become_user: "{{user}}"
  environment: "{{env}}"

  #- name: Install virtualenvwrapper for pipsi
  #  shell: 'eval "$(pyenv init -)" && pip install --user virtualenvwrapper'
  #  args:
  #    executable: "/bin/bash"
  #  tags:
  #    - skip_ansible_lint
  #  become: true
  #  become_user: "{{user}}"
  #  environment: "{{env}}"

  #- name: Pull in Pipsi
  #  get_url:
  #    url: "https://raw.githubusercontent.com/mitsuhiko/pipsi/master/get-pipsi.py"
  #    dest: "/tmp/get-pipsi.py"
  #  become: true
  #  become_user: "{{user}}"

- name: Install pipx
  shell: 'eval "$(pyenv init -)" && pip install --user pipx'
  args:
    executable: "/bin/bash"
  tags:
    - skip_ansible_lint
  become: true
  become_user: "{{ user }}"
  environment: "{{ env }}"

- name: "Install various python packages"
  shell: 'eval "$(pyenv init -)" && pipx install {{item[0]}}'
  args:
    executable: "/bin/bash"
    creates: "{{python_bin_dir}}/{{item[1]}}"
  with_items: "{{ python_tools }}"
  become: true
  become_user: "{{user}}"
  environment: "{{env}}"
  register: pipx_installs
 
- name: "Inject gitstatus into powerline virtualenv"
  when: pipx_installs.changed
  shell: 'eval "$(pyenv init -)" && pipx inject powerline-status powerline-gitstatus'
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{user}}"
  environment: "{{env}}"

- name: "Symlink style.yapf to home directory"
  file:
    src: "{{dotfiles_base_dir}}/python/style.yapf"
    dest: "/home/{{user}}/.style.yapf"
    state: link
    owner: "{{user}}"
    group: "{{user}}"
  become: true
